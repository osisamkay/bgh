name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18.x'
  NEXT_PUBLIC_APP_URL: 'http://localhost:3000'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: "file:./test.db"

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check || true

      - name: Run tests
        run: npm test || true
        env:
          DATABASE_URL: "file:./test.db"
          SMTP_HOST: "localhost"
          SMTP_PORT: "1025"
          SMTP_USER: "test"
          SMTP_PASSWORD: "test"
          SMTP_FROM_EMAIL: "noreply@test.com"
          SMTP_SECURE: "false"
          NEXTAUTH_URL: "http://localhost:3000"
          NEXTAUTH_SECRET: "test_secret"

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: "file:./test.db"
          SMTP_HOST: "localhost"
          SMTP_PORT: "1025"
          SMTP_USER: "test"
          SMTP_PASSWORD: "test"
          SMTP_FROM_EMAIL: "noreply@test.com"
          SMTP_SECURE: "false"
          NEXTAUTH_URL: "http://localhost:3000"
          NEXTAUTH_SECRET: "test_secret"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit

      - name: Check for known vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Uncomment and configure deployment job when ready
  # deploy:
  #   needs: [build-and-test, security]
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to production
  #       run: echo "Add deployment steps here" 